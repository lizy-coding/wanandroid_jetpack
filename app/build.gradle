apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Configs.compile
    buildToolsVersion Configs.build

    defaultConfig {
        applicationId Configs.applicationId
        minSdkVersion Configs.minSdk
        targetSdkVersion Configs.target
        versionCode Configs.versionCode
        versionName Configs.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildFeatures {
        viewBinding = true
        // dataBinding = true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${variant.name}-${variant.versionName}-${variant.versionCode}-${releaseTime()}.apk"
        }
    }

//    signingConfigs {
//        config {
//            storeFile file("./jks/lawappandroid.jks")
//            storePassword "lawapp"
//            keyAlias "lawapp"
//            keyPassword "lawapp"
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

static def releaseTime() {
    return new Date().format("MMdd_HHmm", TimeZone.default)
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation(Deps.kotlinStdlib)
    implementation(Deps.coreKtx)
    implementation(Deps.appcompat)
    implementation(Deps.material)
    implementation(Deps.constraintlayout)
    implementation(Deps.navigationFragment)
    implementation(Deps.navigationUi)
    implementation(Deps.lifecycle)
    implementation(Deps.navigationFragmentKtx)
    implementation(Deps.navigationUiKtx)

    testImplementation(Deps.junit)
    androidTestImplementation(Deps.junitExt)
    androidTestImplementation(Deps.espressoCore)

    /*okhttp„ÄÅretrofit*/
    implementation(Deps.okhttp)
    implementation(Deps.retrofit)
    implementation(Deps.converterGson)
    implementation(Deps.logging)

    /*banner*/
    implementation(Deps.banner)

    /*swiperefreshlayout*/
    implementation(Deps.swiperefreshlayout)

    /*immersionbar*/
    implementation(Deps.immersionbar)

    /*agentWeb*/
    implementation(Deps.agentweb)

    /*YUtils*/
    implementation(Deps.yutilskt)

    /*BRVAH*/
    implementation(Deps.brvha)

    /*glide*/
    implementation(Deps.glide)
    kapt(Deps.glideCompiler)

    /*FlowLayout*/
    implementation(Deps.flowlayout)

    /*VerticalTabLayout*/
    implementation(Deps.VerticalTabLayout)

    /*room*/
    implementation(Deps.roomRuntime)
    kapt(Deps.roomCompiler)
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation(Deps.roomKtx)
    // optional - Test helpers
    testImplementation(Deps.roomTesting)

}
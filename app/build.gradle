apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion project.compile_version
    buildToolsVersion project.build_version

    defaultConfig {
        applicationId "com.yechaoa.wanandroid_jetpack"
        minSdkVersion project.minSdk_version
        targetSdkVersion project.targetSdk_version
        versionCode project.versionCode
        versionName project.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    buildFeatures {
        viewBinding = true
        // dataBinding = true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${variant.name}-${variant.versionName}-${variant.versionCode}-${releaseTime()}.apk"
        }
    }

//    signingConfigs {
//        config {
//            storeFile file("./jks/lawappandroid.jks")
//            storePassword "lawapp"
//            keyAlias "lawapp"
//            keyPassword "lawapp"
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

static def releaseTime() {
    return new Date().format("MMdd_HHmm", TimeZone.default)
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.appcompat:appcompat:$compat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "androidx.navigation:navigation-fragment:$navigationFragment_version"
    implementation "androidx.navigation:navigation-ui:$navigation_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationFragment_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$extJunit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    /*okhttp„ÄÅretrofit*/
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"

    /*banner*/
    implementation "com.youth.banner:banner:$banner_version"

    /*swiperefreshlayout*/
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefresh_version"

    /*immersionbar*/
    implementation "com.gyf.immersionbar:immersionbar:$immersionbar_version"

    /*agentWeb*/
    implementation "com.just.agentweb:agentweb-androidx:$agentweb_version"

    /*YUtils*/
    implementation "com.github.yechaoa.YUtils:yutilskt:$yutilskt_version"

    /*BRVAH*/
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$brvha_version"

    /*glide*/
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    /*FlowLayout*/
    implementation "com.hyman:flowlayout-lib:$flowLayout_version"

    /*VerticalTabLayout*/
    implementation "q.rorbin:VerticalTabLayout:$vertical_version"

    /*room*/
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

}